{"version":3,"sources":["store/utility.js","store/reducers/auth.js","store/actions/actionTypes.js","hoc/Aux/Aux.js","containers/NavbarPage/NavbarPage.js","hoc/Layout/Layout.js","containers/LandingPage/LandingPage.js","store/actions/auth.js","containers/AuthPage/AuthPage.js","containers/AuthPage/LogoutPage.js","containers/RegisterPage/RegisterPage.js","containers/ProfilePage/ProfilePage.js","components/LevelPage/LevelPage.js","components/ProgressBar/ProgressBarPage.js","components/Total/Total.js","components/StudyInfo/StudyInfo.js","components/Dashboard/Dashboard.js","containers/Playground/Playground.js","App.js","registerServiceWorker.js","index.js","assets/images/hour-of-code.png"],"names":["updateObject","oldObject","updatedProperties","Object","objectSpread","initialState","isAuthenticated","error","loading","reducer","state","arguments","length","undefined","action","type","authStart","authSuccess","authFail","authLogout","authRedirectPath","path","setAuthRedirectPath","aux","props","children","NavbarPage","isOpen","toggleCollapse","_this","setState","console","log","this","react_default","a","createElement","mdbreact","color","dark","expand","onClick","id","navbar","left","to","className","right","isAutenticated","icon","nav","caret","href","Component","withRouter","connect","layout","Aux","containers_NavbarPage_NavbarPage","LandingPage","lg","src","hourOfCodeImage","alt","size","xl","md","auth","username","password","isRegistered","dispatch","loginData","url","axios","post","then","response","status","catch","AuthPage","submitHandler","event","preventDefault","_this$state","onAuth","changeHandler","_event$target","target","name","value","defineProperty","switchAuthModeHandler","prevState","logout","onSetAuthRedirectPath","authRedirect","Redirect","onSubmit","onChange","label","required","htmlFor","Link","actions","LogoutPage","RegisterPage","passwordConfirmation","ProfilePage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","firstName","LastName","emaol","bind","assertThisInitialized","LevelPage","level","ProgressBarPage","material","height","Total","StudyInfo","responsive","Dashboard","redirected","redirecthandler","components_LevelPage_LevelPage","ProgressBar_ProgressBarPage","components_Total_Total","components_StudyInfo_StudyInfo","PlaygroundPage","rows","App","routes","Switch","Route","component","exact","Playground","Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","concat","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.97ee3e6e.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    isAuthenticated: false,\n    error: null,\n    loading: false\n};\n\nconst authStart = ( state, action ) => {\n    return updateObject( state, { error: null, loading: true } );\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject( state, { \n        isAuthenticated: true,\n        error: null,\n        loading: false\n     } );\n};\n\nconst authFail = (state, action) => {\n    return updateObject( state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { isAuthenticated: false });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n","const aux = (props) => props.children;\n\nexport default aux;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Navbar, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, Dropdown, DropdownToggle, DropdownMenu,  DropdownItem, Fa } from \"mdbreact\";\n\nclass NavbarPage extends Component {\n  state = {\n    isOpen: false\n  };\n\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  componentDidMount() {\n    console.log(\"Authentication\");\n    console.log(this.props.isAuthenticated);\n  };\n\n  render() {\n    return (\n        <Navbar color=\"default-color\" dark expand=\"md\">\n          <NavbarToggler\n            onClick={this.toggleCollapse}\n          />\n          <Collapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n            <NavbarNav left>\n              <NavItem>\n                <NavLink to=\"/\"><strong className=\"white-text\">Experiment-X</strong></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"#!\">Item1</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"#!\">Item2</NavLink>\n              </NavItem>\n            </NavbarNav>\n            <NavbarNav right>\n              { this.props.isAutenticated === false ?\n                  null :\n                  <NavItem><NavLink to=\"/dashboard\">Dashboard</NavLink></NavItem>\n              }\n              { this.props.isAutenticated === false ? \n                <NavItem><NavLink to=\"/auth/login\"><Fa icon=\"sign-in\"/>Login</NavLink></NavItem> :\n                <NavItem>\n                  <Dropdown>\n                    <DropdownToggle nav caret>\n                      <Fa icon=\"user\" />\n                    </DropdownToggle>\n                    <DropdownMenu className=\"dropdown-default\" right>\n                      <DropdownItem href=\"/profile\">Profile</DropdownItem>\n                      <DropdownItem href=\"#!\">Settings</DropdownItem>\n                      </DropdownMenu>\n                    </Dropdown>\n                  </NavItem>             \n              }\n              { this.props.isAutenticated === false ? \n                <NavItem><NavLink to=\"/auth/register\"><Fa icon=\"pencil\"/>Register</NavLink></NavItem> :\n                <NavItem><NavLink to=\"/auth/logout\"><Fa icon=\"sign-out-alt\"/>Logout</NavLink></NavItem>\n              }\n            </NavbarNav>\n          </Collapse>\n        </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAutenticated: state.isAutenticated\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(NavbarPage));","import React from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport NavbarPage from '../../containers/NavbarPage/NavbarPage';\n\nconst layout = ( props ) => (\n      <Aux>\n        <NavbarPage />\n        <main>\n          {props.children}\n        </main>\n      </Aux>\n);\n\nexport default layout;\n","import React from \"react\";\nimport {  MDBRow, MDBCol, MDBIcon } from \"mdbreact\";\nimport hourOfCodeImage from '../../assets/images/hour-of-code.png'\n\nconst LandingPage = () => {\n  return (\n    <section className=\"my-5 ml-5\">\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n          Experiment-X. Why is so great?\n        </h2>\n        <p className=\"lead dark-grey-text w-responsive text-center mx-auto mb-5\">\n          Because lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n          ad minim veniam.\n        </p>\n        <MDBRow>\n          <MDBCol lg=\"5\" className=\"text-center text-lg-center\">\n            <img\n              className=\"img-fluid\"\n              src={hourOfCodeImage}\n              alt=\"\"\n            />\n          </MDBCol>\n          <MDBCol lg=\"7\">\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"battery-1\" size=\"lg\" className=\"teal-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">A learning-first approach</h5>\n                <p className=\"dark-grey-text\">\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit\n                  enim ad minima veniam, quis nostrum exercitationem ullam.\n                  Reprehenderit maiores aperiam assumenda deleniti hic.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"battery-2\" size=\"lg\" className=\"teal-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Coding interview prep</h5>\n                <p className=\"dark-grey-text\">\n                  Lorem ipsum dolor sit amet.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"battery-3\" size=\"lg\" className=\"teal-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Simulate whiteboard coding</h5>\n                <p className=\"dark-grey-text\">\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit\n                  enim ad minima veniam, quis nostrum exercitationem ullam.\n                  Reprehenderit maiores aperiam assumenda deleniti hic.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"battery-4\" size=\"lg\" className=\"teal-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Smart practice</h5>\n                <p className=\"dark-grey-text\">\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit\n                  enim ad minima veniam.\n                </p>\n              </MDBCol>\n            </MDBRow>\n          </MDBCol>\n        </MDBRow>\n      </section>\n  );\n}\n\nexport default LandingPage;","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = () => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        isAuthenticated: true\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const auth = (username, password, isRegistered) => {\n    return dispatch => {\n        dispatch(authStart());\n        const loginData = 'username=' + username + '&password=' + password + '&submit=submit';\n        let url = 'http://localhost:8181/j_spring_security_check';\n        if (!isRegistered) {\n            url = 'http://localhost:8181/registration';\n        }\n        console.log(loginData);\n        axios.post(url, loginData)\n           .then(response => {\n             console.log(response.status);\n             dispatch(authSuccess());\n           })\n           .catch(error => {\n              console.log(error);\n              dispatch(authFail(error));\n        });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport { MDBBtn, MDBCol, MDBContainer, MDBInput, MDBRow } from 'mdbreact';\nimport * as actions from '../../store/actions/index';\n\n\nclass AuthPage extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    isRegistered: true\n  };\n\n  componentDidMount() {\n    this.props.logout();\n    if (this.props.authRedirectPath !== '/dashboard') {\n        this.props.onSetAuthRedirectPath();\n    }\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    const { username, password, isRegistered } = this.state;\n    this.props.onAuth( username, password, isRegistered );\n  };\n    \n  changeHandler = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    //this.setState({ [event.target.name]: event.target.value });\n  };\n\n  switchAuthModeHandler = () => {\n    this.setState(prevState => {\n        return {isRegistered: !prevState.isRegistered};\n    });\n  };\n\n    render() {\n      let authRedirect = null;\n      if (this.props.isAuthenticated) {\n        authRedirect = <Redirect to={this.props.authRedirectPath}/>\n      }\n      \n      return (\n        <div>\n          {authRedirect}\n          <MDBContainer>\n            <MDBRow className=\"d-flex justify-content-center\">\n              <MDBCol md=\"6\">\n                <form onSubmit={this.submitHandler}>\n                  <p className=\"h5 text-center mb-4\">Login</p>\n                    <div className=\"grey-text\">\n                      <MDBInput\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"username\"\n                         id=\"username\"\n                        value={this.state.username}\n                        onChange={this.changeHandler}\n                        label=\"Your username\"\n                        icon=\"user\"\n                        required\n                      />\n                      <MDBInput\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        value={this.state.password}\n                        onChange={this.changeHandler}\n                        label=\"Your password\"\n                        icon=\"lock\"\n                        required\n                      />\n                      <small className=\"form-text text-muted\">\n                        &emsp;&emsp;&emsp;&nbsp;Password must be at least 6 characters long, contain letters and digits.\n                      </small>\n                      <br />\n                      <p className=\"grey-text d-flex justify-content-end\">\n                        Forgot\n                          <a href=\"#!\" className=\"dark-grey-text ml-2\">Password?</a>\n                      </p>\n                      <MDBCol md=\"4\" className=\"mb-3\">\n                        <div className=\"custom-control custom-checkbox pl-3\">\n                          <input\n                            className=\"custom-control-input\"\n                            type=\"checkbox\"\n                            value=\"\"\n                            id=\"remeberme\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"remeberme\">\n                            Remember me\n                          </label>\n                        </div>\n                      </MDBCol>\n                    </div>\n                    <div className=\"text-center\">\n                      <MDBBtn type=\"submit\">Login</MDBBtn>\n                    </div>\n                    </form>\n                    <br />\n                    <p className=\"grey-text d-flex justify-content-center\">\n                      Don't have an account?\n                      <Link to=\"register\" className=\"dark-grey-text ml-2\">Register</Link>\n                    </p>\n                </MDBCol>\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        );\n      }\n    };\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    isAuthenticated: state.isAuthenticated,\n    authRedirectPath: state.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      logout: () => dispatch(actions.logout()),\n      onAuth: (username, password, isRegistered) => dispatch(actions.auth(username, password, isRegistered)),\n      onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/dashboard'))\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( AuthPage );","import React, { Component } from 'react';\n\nclass LogoutPage extends Component {\n}\n\nexport default LogoutPage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\nimport * as actions from '../../store/actions/index';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    passwordConfirmation: ''\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth( this.state.username.value, this.state.password.value, this.state.isRegistered );\n  };\n    \n  changeHandler= (event) => {\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n  };\n\n    render() {\n        return (\n          <MDBContainer>\n            <MDBRow className=\"d-flex justify-content-center\">\n              <MDBCol md=\"6\">\n                  <form onSubmit={this.submitHandler}>\n                    <p className=\"h5 text-center mb-4\">Register</p>\n                    <div className=\"grey-text\">\n                      <MDBInput\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"username\"\n                        id=\"username\"\n                        value={this.state.username}\n                        onChange={this.changeHandler}\n                        label=\"Your username\"\n                        icon=\"user\"\n                        required\n                        /*{pattern=\"[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){5,15}\"}*/\n                      />\n                      <MDBInput\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        value={this.state.password}\n                        onChange={this.changeHandler}\n                        label=\"Your password\"\n                        icon=\"lock\"\n                        required\n                        /*{pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6}$\"}*/\n                      />\n                      <MDBInput\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"passwordConfirmation\"\n                        id=\"passwordConfirmation\"\n                        value={this.state.passwordConfirmation}\n                        onChange={this.changeHandler}\n                        label=\"Password confirmation\"\n                        icon=\"lock\"\n                        required\n                        /*{pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6}$\"}*/\n                      />\n                  </div>\n                  <div className=\"text-center\">\n                    <MDBBtn type=\"submit\">Register</MDBBtn>\n                  </div>\n                  </form>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onAuth: (username, password, isRegistered) => dispatch(actions.auth(username, password, false))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterPage);","import React, { Component } from 'react';\n\nclass ProfilePage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            LastName: '',\n            emaol: ''\n        };\n\n        this.changeHandler = this.changeHandler.bind(this);\n        this.submitHandler = this.submitHandler.bind(this);\n    }\n\n    submitHandler(event) {\n        event.preventDefault();\n        event.target.className += \" was-validated\";\n      };\n    \n    changeHandler(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        return (\n          <div className=\" d-flex justify-content-center\">\n            Hi! Soon Your profile info will be there\n          </div>\n        );\n    }\n}\n\nexport default ProfilePage;","import React, { Component } from \"react\";\nimport { MDBBadge, MDBContainer, MDBRow } from \"mdbreact\";\n\nclass LevelPage extends Component {\n    state = {\n      level: \"1\"\n    };\n\n    render() {\n      return (\n        <MDBContainer className=\"justify-content-center\">\n          <h5 className=\"text-center mb-0\"><strong><strong>Level</strong></strong><br />\n            <MDBBadge color={this.state.level===\"1\" ? \"default\" : \"stylish-colork\"}>1</MDBBadge>&nbsp;\n            <MDBBadge color={this.state.level===\"2\" ? \"default\" : \"stylish-color\"}>2</MDBBadge>&nbsp;\n            <MDBBadge color={this.state.level===\"3\" ? \"default\" : \"stylish-color\"}>3</MDBBadge>&nbsp;\n            <MDBBadge color={this.state.level===\"4\" ? \"default\" : \"stylish-color\"}>4</MDBBadge>&nbsp;\n            <MDBBadge color={this.state.level===\"5\" ? \"default\" : \"stylish-color\"}>5</MDBBadge>\n          </h5>\n        </MDBContainer>\n      );\n    }\n}\n\nexport default LevelPage;\n","import React from \"react\";\nimport { MDBContainer, MDBProgress } from 'mdbreact';\n\nconst ProgressBarPage = () => {\n  return (\n    <MDBContainer className=\"justify-content-center\">    \n    <p className=\"text-center mb-0\">Solve remaining problems to upgrade to the next level</p>\n    <p className=\"text-center mb-0\"><strong><strong>1 / 5</strong></strong></p>\n    <MDBProgress color=\"default\" material value={20} height=\"25px\" />\n    </MDBContainer>\n  );\n}\n\nexport default ProgressBarPage;","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBIcon } from \"mdbreact\";\n\nconst Total = () => {\n  return (\n    <MDBContainer>\n      <MDBRow className=\"justify-content-center\">\n        <p className=\"text-center mb-0\"><MDBIcon icon=\"code\" size=\"2x\"/></p>\n      </MDBRow>\n      <MDBRow className=\"justify-content-center\">\n        <p className=\"text-center mb-0\"><strong><strong>100</strong></strong> problems left to master in all levels</p>\n      </MDBRow>\n    </MDBContainer>\n  );\n}\n\nexport default Total;","import React, { Fragment, Component } from \"react\";\nimport { MDBRow, MDBCol, MDBContainer, MDBBadge, MDBBtn, MDBTable, MDBTableHead, MDBTableBody } from \"mdbreact\";\n\nclass StudyInfo extends Component {\n  render() {\n    return (\n      <MDBTable responsive>\n      <MDBTableHead className=\"justify-content-center\">\n        <tr className=\"justify-content-center\">\n          <th className=\"text-center\"><h4><strong>Study Timeline</strong></h4></th>\n        </tr>\n      </MDBTableHead>\n      <MDBTableBody>\n        <tr>\n          <td> \n            <h5>Task name&nbsp;&nbsp;\n              <MDBBadge color=\"default\">1</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">2</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">3</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">4</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">5</MDBBadge>\n            </h5>\n          </td>\n          <td>\n            <MDBBtn size=\"sm\">Train again</MDBBtn>\n            <MDBBtn size=\"sm\">Something else</MDBBtn>\n          </td>\n        </tr>\n        <tr>\n          <td> \n            <h5>Task name&nbsp;&nbsp;\n              <MDBBadge color=\"stylish-color\">1</MDBBadge>&nbsp;\n              <MDBBadge color=\"default\">2</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">3</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">4</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">5</MDBBadge>\n            </h5>\n          </td>\n          <td>\n            <MDBBtn size=\"sm\">Train again</MDBBtn>\n            <MDBBtn size=\"sm\">Something else</MDBBtn>\n          </td>\n        </tr>\n      </MDBTableBody>\n    </MDBTable>\n    );\n  }\n}\n\nexport default StudyInfo;","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport LevelPage from '../LevelPage/LevelPage';\nimport ProgressbarPage from '../ProgressBar/ProgressBarPage';\nimport Total from '../Total/Total';\nimport StudyInfo from '../StudyInfo/StudyInfo';\n\n\nclass Dashboard extends Component {\n  state = {\n    redirected: false\n  }\n\n  redirecthandler = () => {\n    this.setState({redirected: true});\n    console.log(this.state);\n  };\n\n  render() { \n    if (this.state.redirected === true) {\n      return <Redirect to='/playground' />\n    }\n\n    return (\n      <MDBContainer>\n        <MDBRow className=\"justify-content-center\">\n          <MDBCol md=\"4\"><LevelPage /></MDBCol>\n          <MDBCol md=\"4\"><ProgressbarPage /></MDBCol>\n          <MDBCol md=\"4\"><Total /></MDBCol>\n        </MDBRow>\n        <br />\n        <br />\n        <MDBRow className=\"justify-content-center\">\n            <MDBBtn onClick={this.redirecthandler}>\n              <strong>Continue training</strong>\n            </MDBBtn>\n        </MDBRow>\n        <br />\n        <MDBRow className=\"justify-content-center\">\n          <StudyInfo />\n        </MDBRow>\n      </MDBContainer>\n    );\n  };\n}\n\nexport default Dashboard;\n","import React from 'react'\nimport { MDBInput, MDBRow } from 'mdbreact';\n\nconst PlaygroundPage = () => {\n    return (\n      <MDBInput \n        className=\"\"\n        type=\"textarea\"\n        label=\"Type your code here\"\n        rows=\"5\"\n        icon=\"code\"\n      />\n    );\n}\n\nexport default PlaygroundPage;","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport LandingPage from './containers/LandingPage/LandingPage';\nimport AuthPage from './containers/AuthPage/AuthPage';\nimport LogoutPage from './containers/AuthPage/LogoutPage';\nimport RegisterPage from './containers/RegisterPage/RegisterPage';\nimport ProfilePage from './containers/ProfilePage/ProfilePage';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Playground from './containers/Playground/Playground';\n\nimport './index.css';\n\nclass App extends Component {\n  render () {\n    let routes = (\n      <Switch>\n        <Route path='/auth/register' component={RegisterPage} />\n        <Route path=\"/auth/login\" component={AuthPage} />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if ( this.props.isAuthenticated ) {\n      routes = (\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/playground\" component={Playground} />\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/logout\" component={LogoutPage} />\n          <Redirect to=\"/dashboard\" />\n          <Redirect to=\"/playground\" />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          <br />\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, null )( App ) );\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/auth';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app , document.getElementById('root'));\n\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/hour-of-code.e95c6ef5.png\";"],"sourceRoot":""}