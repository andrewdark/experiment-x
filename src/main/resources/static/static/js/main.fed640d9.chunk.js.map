{"version":3,"sources":["store/utility.js","store/reducers/auth.js","store/actions/actionTypes.js","hoc/Aux/Aux.js","containers/NavbarPage/NavbarPage.js","hoc/Layout/Layout.js","containers/LandingPage/LandingPage.js","store/actions/auth.js","containers/AuthPage/AuthPage.js","containers/Logout/Logout.js","containers/RegisterPage/RegisterPage.js","containers/ProfilePage/ProfilePage.js","components/LevelPage/LevelPage.js","components/ProgressBar/ProgressBarPage.js","components/Total/Total.js","components/StudyInfo/StudyInfo.js","components/Dashboard/Dashboard.js","containers/Playground/Playground.js","App.js","registerServiceWorker.js","index.js","assets/images/hour-of-code.png"],"names":["updateObject","oldObject","updatedProperties","Object","objectSpread","initialState","authRedirectPath","error","isAuthenticated","reducer","state","arguments","length","undefined","action","type","authStart","authSuccess","authFail","authLogout","path","setAuthRedirectPath","aux","props","children","NavbarPage","isOpen","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact","color","dark","expand","onClick","this","id","navbar","left","to","className","right","nav","caret","icon","href","Component","withRouter","connect","layout","Aux","containers_NavbarPage_NavbarPage","LandingPage","lg","src","hourOfCodeImage","alt","size","xl","md","auth","username","password","isSignup","dispatch","loginData","concat","url","axios","post","then","response","console","log","status","catch","AuthPage","submitHandler","event","preventDefault","_this$state","onAuth","changeHandler","_event$target","target","name","value","defineProperty","onSetAuthRedirectPath","authRedirect","Redirect","onSubmit","onChange","label","required","htmlFor","Link","actions","Logout","onLogout","RegisterPage","passwordConfirmation","ProfilePage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","firstName","LastName","emaol","bind","assertThisInitialized","LevelPage","level","ProgressBarPage","material","height","Total","StudyInfo","responsive","Dashboard","redirected","redirecthandler","components_LevelPage_LevelPage","ProgressBar_ProgressBarPage","components_Total_Total","components_StudyInfo_StudyInfo","PlaygroundPage","rows","App","routes","Switch","Route","component","exact","Playground","Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fed640d9.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    authRedirectPath: '/dashboard',\n    error: null,\n    isAuthenticated: false\n};\n\nconst authStart = ( state, action ) => {\n    return updateObject( state, { error: null } );\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject( state, { \n        isAuthenticated: true,\n        error: null\n     } );\n};\n\nconst authFail = (state, action) => {\n    return updateObject( state, {\n        error: action.error\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {isAuthenticated: false });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n","const aux = (props) => props.children;\n\nexport default aux;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Navbar, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, Dropdown, DropdownToggle, DropdownMenu,  DropdownItem, Fa } from \"mdbreact\";\n\nclass NavbarPage extends Component {\n  state = {\n    isOpen: true,\n  };\n\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return (\n        <Navbar color=\"default-color\" dark expand=\"md\">\n          <NavbarToggler\n            onClick={this.toggleCollapse}\n          />\n          <Collapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n            <NavbarNav left>\n              <NavItem>\n                <NavLink to=\"/\"><strong className=\"white-text\">Experiment-X</strong></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"#!\">Item1</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"#!\">Item2</NavLink>\n              </NavItem>\n            </NavbarNav>\n            <NavbarNav right>\n              { !this.props.isAuthenticated ?\n                  null :\n                  <NavItem><NavLink to=\"/dashboard\">Dashboard</NavLink></NavItem>\n              }\n              { !this.props.isAuthenticated ? \n                <NavItem><NavLink to=\"/login\"><Fa icon=\"sign-in\"/>Login</NavLink></NavItem> :\n                <NavItem>\n                  <Dropdown>\n                    <DropdownToggle nav caret>\n                      <Fa icon=\"user\" />\n                    </DropdownToggle>\n                    <DropdownMenu className=\"dropdown-default\" right>\n                      <DropdownItem href=\"/profile\">Profile</DropdownItem>\n                      <DropdownItem href=\"#!\">Settings</DropdownItem>\n                      </DropdownMenu>\n                    </Dropdown>\n                  </NavItem>             \n              }\n              { !this.props.isAuthenticated ? \n                <NavItem><NavLink to=\"/register\"><Fa icon=\"pencil\"/>Register</NavLink></NavItem> :\n                <NavItem><NavLink to=\"/logout\"><Fa icon=\"sign-out-alt\"/>Logout</NavLink></NavItem>\n              }\n            </NavbarNav>\n          </Collapse>\n        </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(NavbarPage));","import React from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport NavbarPage from '../../containers/NavbarPage/NavbarPage';\n\nconst layout = ( props ) => (\n      <Aux>\n        <NavbarPage />\n        <main>\n          {props.children}\n        </main>\n      </Aux>\n);\n\nexport default layout;\n","import React from \"react\";\nimport {  MDBRow, MDBCol, MDBIcon } from \"mdbreact\";\nimport hourOfCodeImage from '../../assets/images/hour-of-code.png'\n\nconst LandingPage = () => {\n  return (\n    <section className=\"my-5 ml-5\">\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n          Experiment-X. Why is so great?\n        </h2>\n        <p className=\"lead dark-grey-text w-responsive text-center mx-auto mb-5\">\n          Because lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n          ad minim veniam.\n        </p>\n        <MDBRow>\n          <MDBCol lg=\"5\" className=\"text-center text-lg-center\">\n            <img\n              className=\"img-fluid\"\n              src={hourOfCodeImage}\n              alt=\"\"\n            />\n          </MDBCol>\n          <MDBCol lg=\"7\">\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"battery-1\" size=\"lg\" className=\"teal-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">A learning-first approach</h5>\n                <p className=\"dark-grey-text\">\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit\n                  enim ad minima veniam, quis nostrum exercitationem ullam.\n                  Reprehenderit maiores aperiam assumenda deleniti hic.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"battery-2\" size=\"lg\" className=\"teal-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Coding interview prep</h5>\n                <p className=\"dark-grey-text\">\n                  Lorem ipsum dolor sit amet.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"battery-3\" size=\"lg\" className=\"teal-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Simulate whiteboard coding</h5>\n                <p className=\"dark-grey-text\">\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit\n                  enim ad minima veniam, quis nostrum exercitationem ullam.\n                  Reprehenderit maiores aperiam assumenda deleniti hic.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"battery-4\" size=\"lg\" className=\"teal-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Smart practice</h5>\n                <p className=\"dark-grey-text\">\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit\n                  enim ad minima veniam.\n                </p>\n              </MDBCol>\n            </MDBRow>\n          </MDBCol>\n        </MDBRow>\n      </section>\n  );\n}\n\nexport default LandingPage;","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = () => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        isAuthenticated: true,\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n        isAuthenticated: false\n    };\n};\n\nexport const auth = (username, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const loginData = `username=${username}&password=${password}&submit=submit`;\n        let url = '/register';\n        if (!isSignup) {\n            url = '/login';\n        }\n        axios.post(url, loginData)\n           .then(response => {\n             console.log(response.status);\n             dispatch(authSuccess());\n           })\n           .catch(error => {\n              console.log(error);\n              dispatch(authFail(error));\n        });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        if (!this.isAuthenticated) {\n            console.log('not authenticated')\n            dispatch(logout());\n        } else {\n            dispatch(authSuccess());   \n        }\n    };\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport { MDBBtn, MDBCol, MDBContainer, MDBInput, MDBRow } from 'mdbreact';\nimport * as actions from '../../store/actions/index';\n\n\nclass AuthPage extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    isSignup: false\n  };\n\n  componentDidMount() {\n    if (this.props.authRedirectPath !== '/dashboard') {\n        this.props.onSetAuthRedirectPath();\n    }\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    const { username, password, isSignup } = this.state;\n    this.props.onAuth( username, password, isSignup );\n  };\n    \n  changeHandler = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n    render() {\n      let authRedirect = null;\n      if (this.props.isAuthenticated) {\n        authRedirect = <Redirect to={this.props.authRedirectPath}/>\n      }\n      \n      return (\n        <div>\n          {authRedirect}\n          <MDBContainer>\n            <MDBRow className=\"d-flex justify-content-center\">\n              <MDBCol md=\"6\">\n                <form onSubmit={this.submitHandler}>\n                  <p className=\"h5 text-center mb-4\">Login</p>\n                    <div className=\"grey-text\">\n                      <MDBInput\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"username\"\n                        id=\"username\"\n                        value={this.state.username}\n                        onChange={this.changeHandler}\n                        label=\"Your username\"\n                        icon=\"user\"\n                        required\n                      />\n                      <MDBInput\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        value={this.state.password}\n                        onChange={this.changeHandler}\n                        label=\"Your password\"\n                        icon=\"lock\"\n                        required\n                      />\n                      <small className=\"form-text text-muted\">\n                        &emsp;&emsp;&emsp;&nbsp;Password must be at least 6 characters long, contain letters and digits.\n                      </small>\n                      <br />\n                      <p className=\"grey-text d-flex justify-content-end\">\n                        Forgot\n                          <a href=\"#!\" className=\"dark-grey-text ml-2\">Password?</a>\n                      </p>\n                      <MDBCol md=\"4\" className=\"mb-3\">\n                        <div className=\"custom-control custom-checkbox pl-3\">\n                          <input\n                            className=\"custom-control-input\"\n                            type=\"checkbox\"\n                            value=\"\"\n                            id=\"remeberme\"\n                          />\n                          <label className=\"custom-control-label\" htmlFor=\"remeberme\">\n                            Remember me\n                          </label>\n                        </div>\n                      </MDBCol>\n                    </div>\n                    <div className=\"text-center\">\n                      <MDBBtn type=\"submit\">Login</MDBBtn>\n                    </div>\n                    </form>\n                    <br />\n                    <p className=\"grey-text d-flex justify-content-center\">\n                      Don't have an account?\n                      <Link to=\"register\" className=\"dark-grey-text ml-2\">Register</Link>\n                    </p>\n                </MDBCol>\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        );\n      }\n    };\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    isAuthenticated: state.isAuthenticated,\n    authRedirectPath: state.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onAuth: (username, password, isSignup) => dispatch(actions.auth(username, password, isSignup)),\n      onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/dashboard'))\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( AuthPage );","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions/index';\n\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n    render () {\n        return <Redirect to=\"/\"/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\nimport * as actions from '../../store/actions/index';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    passwordConfirmation: '',\n    isSignup: true\n  };\n\n  componentDidMount() {\n    if (this.props.authRedirectPath !== '/dashboard') {\n        this.props.onSetAuthRedirectPath();\n    }\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    const { username, password, isSignup } = this.state;\n    this.props.onAuth( username, password, isSignup );\n  };\n    \n  changeHandler = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    let authRedirect = null;\n    if (this.props.isAuthenticated) {\n      authRedirect = <Redirect to={this.props.authRedirectPath}/>\n    }\n      return (\n        <MDBContainer>\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol md=\"6\">\n                <form onSubmit={this.submitHandler}>\n                  <p className=\"h5 text-center mb-4\">Register</p>\n                  <div className=\"grey-text\">\n                    <MDBInput\n                      className=\"form-control\"\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"username\"\n                      value={this.state.username}\n                      onChange={this.changeHandler}\n                      label=\"Your username\"\n                      icon=\"user\"\n                      required\n                      /*{pattern=\"[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){5,15}\"}*/\n                    />\n                    <MDBInput\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      value={this.state.password}\n                      onChange={this.changeHandler}\n                      label=\"Your password\"\n                      icon=\"lock\"\n                      required\n                      /*{pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6}$\"}*/\n                    />\n                    <MDBInput\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"passwordConfirmation\"\n                      id=\"passwordConfirmation\"\n                      value={this.state.passwordConfirmation}\n                      onChange={this.changeHandler}\n                      label=\"Password confirmation\"\n                      icon=\"lock\"\n                      required\n                      /*{pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6}$\"}*/\n                    />\n                </div>\n                <div className=\"text-center\">\n                  <MDBBtn type=\"submit\">Register</MDBBtn>\n                </div>\n                </form>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    isAuthenticated: state.isAuthenticated,\n    authRedirectPath: state.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onAuth: (username, password, isSignup) => dispatch(actions.auth(username, password, isSignup)),\n      onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/dashboard'))\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( RegisterPage );\n","import React, { Component } from 'react';\n\nclass ProfilePage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            LastName: '',\n            emaol: ''\n        };\n\n        this.changeHandler = this.changeHandler.bind(this);\n        this.submitHandler = this.submitHandler.bind(this);\n    }\n\n    submitHandler(event) {\n        event.preventDefault();\n        event.target.className += \" was-validated\";\n      };\n    \n    changeHandler(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        return (\n          <div className=\" d-flex justify-content-center\">\n            Hi! Soon Your profile info will be there\n          </div>\n        );\n    }\n}\n\nexport default ProfilePage;","import React, { Component } from \"react\";\nimport { MDBBadge, MDBContainer, MDBRow } from \"mdbreact\";\n\nclass LevelPage extends Component {\n    state = {\n      level: \"1\"\n    };\n\n    render() {\n      return (\n        <MDBContainer className=\"justify-content-center\">\n          <h5 className=\"text-center mb-0\"><strong><strong>Level</strong></strong><br />\n            <MDBBadge color={this.state.level===\"1\" ? \"default\" : \"stylish-colork\"}>1</MDBBadge>&nbsp;\n            <MDBBadge color={this.state.level===\"2\" ? \"default\" : \"stylish-color\"}>2</MDBBadge>&nbsp;\n            <MDBBadge color={this.state.level===\"3\" ? \"default\" : \"stylish-color\"}>3</MDBBadge>&nbsp;\n            <MDBBadge color={this.state.level===\"4\" ? \"default\" : \"stylish-color\"}>4</MDBBadge>&nbsp;\n            <MDBBadge color={this.state.level===\"5\" ? \"default\" : \"stylish-color\"}>5</MDBBadge>\n          </h5>\n        </MDBContainer>\n      );\n    }\n}\n\nexport default LevelPage;\n","import React from \"react\";\nimport { MDBContainer, MDBProgress } from 'mdbreact';\n\nconst ProgressBarPage = () => {\n  return (\n    <MDBContainer className=\"justify-content-center\">    \n    <p className=\"text-center mb-0\">Solve remaining problems to upgrade to the next level</p>\n    <p className=\"text-center mb-0\"><strong><strong>1 / 5</strong></strong></p>\n    <MDBProgress color=\"default\" material value={20} height=\"25px\" />\n    </MDBContainer>\n  );\n}\n\nexport default ProgressBarPage;","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBIcon } from \"mdbreact\";\n\nconst Total = () => {\n  return (\n    <MDBContainer>\n      <MDBRow className=\"justify-content-center\">\n        <p className=\"text-center mb-0\"><MDBIcon icon=\"code\" size=\"2x\"/></p>\n      </MDBRow>\n      <MDBRow className=\"justify-content-center\">\n        <p className=\"text-center mb-0\"><strong><strong>100</strong></strong> problems left to master in all levels</p>\n      </MDBRow>\n    </MDBContainer>\n  );\n}\n\nexport default Total;","import React, { Fragment, Component } from \"react\";\nimport { MDBRow, MDBCol, MDBContainer, MDBBadge, MDBBtn, MDBTable, MDBTableHead, MDBTableBody } from \"mdbreact\";\n\nclass StudyInfo extends Component {\n  render() {\n    return (\n      <MDBTable responsive>\n      <MDBTableHead className=\"justify-content-center\">\n        <tr className=\"justify-content-center\">\n          <th className=\"text-center\"><h4><strong>Study Timeline</strong></h4></th>\n        </tr>\n      </MDBTableHead>\n      <MDBTableBody>\n        <tr>\n          <td> \n            <h5>Task name&nbsp;&nbsp;\n              <MDBBadge color=\"default\">1</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">2</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">3</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">4</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">5</MDBBadge>\n            </h5>\n          </td>\n          <td>\n            <MDBBtn size=\"sm\">Train again</MDBBtn>\n            <MDBBtn size=\"sm\">Something else</MDBBtn>\n          </td>\n        </tr>\n        <tr>\n          <td> \n            <h5>Task name&nbsp;&nbsp;\n              <MDBBadge color=\"stylish-color\">1</MDBBadge>&nbsp;\n              <MDBBadge color=\"default\">2</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">3</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">4</MDBBadge>&nbsp;\n              <MDBBadge color=\"stylish-color\">5</MDBBadge>\n            </h5>\n          </td>\n          <td>\n            <MDBBtn size=\"sm\">Train again</MDBBtn>\n            <MDBBtn size=\"sm\">Something else</MDBBtn>\n          </td>\n        </tr>\n      </MDBTableBody>\n    </MDBTable>\n    );\n  }\n}\n\nexport default StudyInfo;","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport LevelPage from '../LevelPage/LevelPage';\nimport ProgressbarPage from '../ProgressBar/ProgressBarPage';\nimport Total from '../Total/Total';\nimport StudyInfo from '../StudyInfo/StudyInfo';\n\n\nclass Dashboard extends Component {\n  state = {\n    redirected: false\n  }\n\n  redirecthandler = () => {\n    this.setState({redirected: true});\n  };\n\n  render() { \n    if (this.state.redirected === true) {\n      return <Redirect to='/playground' />\n    }\n\n    return (\n      <MDBContainer>\n        <MDBRow className=\"justify-content-center\">\n          <MDBCol md=\"4\"><LevelPage /></MDBCol>\n          <MDBCol md=\"4\"><ProgressbarPage /></MDBCol>\n          <MDBCol md=\"4\"><Total /></MDBCol>\n        </MDBRow>\n        <br />\n        <br />\n        <MDBRow className=\"justify-content-center\">\n            <MDBBtn onClick={this.redirecthandler}>\n              <strong>Continue training</strong>\n            </MDBBtn>\n        </MDBRow>\n        <br />\n        <MDBRow className=\"justify-content-center\">\n          <StudyInfo />\n        </MDBRow>\n      </MDBContainer>\n    );\n  };\n}\n\nexport default Dashboard;\n","import React from 'react'\nimport { MDBInput, MDBRow } from 'mdbreact';\n\nconst PlaygroundPage = () => {\n    return (\n      <MDBInput \n        className=\"\"\n        type=\"textarea\"\n        label=\"Type your code here\"\n        rows=\"5\"\n        icon=\"code\"\n      />\n    );\n}\n\nexport default PlaygroundPage;","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport LandingPage from './containers/LandingPage/LandingPage';\nimport AuthPage from './containers/AuthPage/AuthPage';\nimport Logout from './containers/Logout/Logout';\nimport RegisterPage from './containers/RegisterPage/RegisterPage';\nimport ProfilePage from './containers/ProfilePage/ProfilePage';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Playground from './containers/Playground/Playground';\n\nimport './index.css';\n\nclass App extends Component {\n  render () {\n    let routes = (\n      <Switch>\n        <Route path='/register' component={RegisterPage} />\n        <Route path=\"/login\" component={AuthPage} />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if ( this.props.isAuthenticated ) {\n      routes = (\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/playground\" component={Playground} />\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={LandingPage} />\n          <Redirect to=\"/dashboard\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          <br />\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, null )( App ) );\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/auth';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app , document.getElementById('root'));\n\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/hour-of-code.e95c6ef5.png\";"],"sourceRoot":""}